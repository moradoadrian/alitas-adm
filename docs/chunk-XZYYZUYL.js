import{$b as y,$c as ya,$d as yb,Ac as Z,Ad as Za,Bc as _,Bd as _a,Cb as a,Cc as $,Cd as $a,Db as b,Dc as aa,Dd as ab,Eb as c,Ec as ba,Ed as bb,Fb as d,Fc as ca,Fd as cb,Gb as e,Gc as da,Gd as db,Hb as f,Hc as ea,Hd as eb,Ib as g,Ic as fa,Id as fb,Jb as h,Jc as ga,Jd as gb,Kb as i,Kc as ha,Kd as hb,Lb as j,Lc as ia,Ld as ib,Mb as k,Mc as ja,Md as jb,Nb as l,Nc as ka,Nd as kb,Ob as m,Oc as la,Od as lb,Pb as n,Pc as ma,Pd as mb,Qb as o,Qc as na,Qd as nb,Rb as p,Rc as oa,Rd as ob,Sb as q,Sc as pa,Sd as pb,Tb as r,Tc as qa,Td as qb,Ub as s,Uc as ra,Ud as rb,Vc as sa,Vd as sb,Wb as t,Wc as ta,Wd as tb,Xb as u,Xc as ua,Xd as ub,Yb as v,Yc as va,Yd as vb,Zb as w,Zc as wa,Zd as wb,_b as x,_c as xa,_d as xb,ac as z,ad as za,ae as zb,bc as A,bd as Aa,cc as B,cd as Ba,dc as C,dd as Ca,ec as D,ed as Da,fc as E,fd as Ea,gc as F,gd as Fa,hc as G,hd as Ga,ic as H,id as Ha,jc as I,jd as Ia,kc as J,kd as Ja,lc as K,ld as Ka,mc as L,md as La,nc as M,nd as Ma,oc as N,od as Na,pc as O,pd as Oa,qc as P,qd as Pa,rc as Q,rd as Qa,sc as R,sd as Ra,tc as S,td as Sa,uc as T,ud as Ta,vc as U,vd as Ua,wc as V,wd as Va,xc as W,xd as Wa,yc as X,yd as Xa,zc as Y,zd as Ya}from"./chunk-OXBBPQXQ.js";export{I as AbstractUserDataWriter,u as AggregateField,v as AggregateQuerySnapshot,w as Bytes,s as CACHE_SIZE_UNLIMITED,q as CollectionReference,p as DocumentReference,M as DocumentSnapshot,x as FieldPath,y as FieldValue,ga as Firestore,c as FirestoreError,ha as FirestoreInstances,ja as FirestoreModule,z as GeoPoint,r as LoadBundleTask,ca as PersistentCacheIndexManager,o as Query,D as QueryCompositeFilterConstraint,B as QueryConstraint,O as QueryDocumentSnapshot,H as QueryEndAtConstraint,C as QueryFieldFilterConstraint,F as QueryLimitConstraint,E as QueryOrderByConstraint,P as QuerySnapshot,G as QueryStartAtConstraint,L as SnapshotMetadata,k as Timestamp,_ as Transaction,A as VectorValue,Z as WriteBatch,f as _AutoId,m as _ByteString,n as _DatabaseId,h as _DocumentKey,e as _EmptyAppCheckTokenProvider,d as _EmptyAuthCredentialsProvider,g as _FieldPath,fa as _TestingHooks,j as _cast,b as _debugAssert,ea as _internalAggregationQueryToProtoRunAggregationQueryRequest,da as _internalQueryToProtoQueryTarget,l as _isBase64Available,a as _logWarn,i as _validateIsNotUsedTogether,wa as addDoc,xa as aggregateFieldEqual,ya as aggregateQuerySnapshotEqual,za as and,ba as arrayRemove,aa as arrayUnion,la as auditTrail,J as average,Aa as clearIndexedDbPersistence,Ba as collection,na as collectionChanges,oa as collectionCount,pa as collectionCountSnap,qa as collectionData,Ca as collectionGroup,ma as collectionSnapshots,Da as connectFirestoreEmulator,K as count,Ea as deleteAllPersistentCacheIndexes,Fa as deleteDoc,Ga as deleteField,Ha as disableNetwork,Ia as disablePersistentCacheIndexAutoCreation,Ja as doc,sa as docData,ra as docSnapshots,Ka as documentId,N as documentSnapshotFromJSON,La as enableIndexedDbPersistence,Ma as enableMultiTabIndexedDbPersistence,Na as enableNetwork,Oa as enablePersistentCacheIndexAutoCreation,Pa as endAt,Qa as endBefore,t as ensureFirestoreConfigured,S as executeWrite,ia as firestoreInstance$,ta as fromRef,Ra as getAggregateFromServer,Sa as getCountFromServer,Ta as getDoc,Ua as getDocFromCache,Va as getDocFromServer,Wa as getDocs,Xa as getDocsFromCache,Ya as getDocsFromServer,Za as getFirestore,_a as getPersistentCacheIndexManager,$a as increment,ab as initializeFirestore,bb as limit,cb as limitToLast,db as loadBundle,T as memoryEagerGarbageCollector,V as memoryLocalCache,U as memoryLruGarbageCollector,eb as namedQuery,fb as onSnapshot,R as onSnapshotResume,gb as onSnapshotsInSync,hb as or,ib as orderBy,W as persistentLocalCache,Y as persistentMultipleTabManager,X as persistentSingleTabManager,ka as provideFirestore,jb as query,kb as queryEqual,Q as querySnapshotFromJSON,lb as refEqual,mb as runTransaction,$ as serverTimestamp,nb as setDoc,ob as setIndexConfiguration,pb as setLogLevel,ua as snapToData,qb as snapshotEqual,va as sortedChanges,rb as startAfter,sb as startAt,tb as sum,ub as terminate,vb as updateDoc,wb as vector,xb as waitForPendingWrites,yb as where,zb as writeBatch};
